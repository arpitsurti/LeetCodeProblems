using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace LeetcodeProblems.Easy
{
    /*389. Find the Difference
     * You are given two strings s and t.

        String t is generated by random shuffling string s and then add one more letter at a random position.
        Return the letter that was added to t.

        Example 1:
        Input: s = "abcd", t = "abcde"
        Output: "e"
        Explanation: 'e' is the letter that was added.

        Example 2:
        Input: s = "", t = "y"
        Output: "y"
 
        Constraints:
        0 <= s.length <= 1000
        t.length == s.length + 1
        s and t consist of lowercase English letters.
    */
    public class clsFindTheDifference
    {
        public char FindTheDifference(string s, string t)
        {
            //APPROACH 1
            int asciiS = 0;
            int asciiT = 0;
            for (int i = 0; i < s.Length; i++)
                asciiS += (int)s[i];
            for (int i = 0; i < t.Length; i++)
                asciiT += (int)t[i];
            return (char)(asciiT - asciiS);
            /*APPROACH 2
             int[] map = new int[26];
            for(int i = 0; i < s.Length; i++)
            {
                map[s[i] - 'a']++;
            }
            for(int i = 0; i < t.Length; i++)
            {
                map[t[i] - 'a']--;
            }
            for(int i = 0; i < 32; i++)
            {
                if(map[i] < 0)
                    return (char)('a' + i);
            }
            return ' ';
            */

            /*APPROACH 3
             * Dictionary<char, int> dict = new Dictionary<char, int>();
            for(int i = 0; i < t.Length; i++)
            {
                if(!dict.ContainsKey(t[i]))
                    dict.Add(t[i], 0);
                dict[t[i]]++;
            }
            for(int i = 0; i < s.Length; i++)
            {
                dict[s[i]]--;
            }
            foreach(var item in dict)
            {
                if(item.Value == 1)
                    return item.Key;
            }
            return 'a';
            */
        }
    }
}
